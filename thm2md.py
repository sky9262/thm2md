#!/usr/bin/python3

import requests
import re
from datetime import date
import sys
import os

CLEANR = re.compile("<.*?>|&([a-z0-9]+|#[0-9]{1,6}|#x[0-9a-f]{1,6});")


def cleanhtml(raw_html):
    cleantext = re.sub(CLEANR, "", raw_html)
    return cleantext


def setup():
    directory = os.path.expanduser("~") + "/.thm2md"
    if not os.path.exists(directory):
        os.makedirs(directory)

    with open(f'{os.path.expanduser("~")}/.thm2md/config.thm', "w") as config:
        config.write(input("Enter your name: ") + "\n")
        config.write(input("Enter connect.sid cookie: "))


def print_help():
    print(
        """
\033[95mWELCOME TO 'thm2md' HELP :-)\033[0m


\033[91mNAME\033[0m
      thm2md

\033[91mSYNOPSIS\033[0m
          thm2md.py --setup

          thm2md.py [Room Name] [Path To Save]

\033[91mDESCRIPTION\033[0m
             thm2md is a tool to make notes for TryHackMe rooms

\033[91mOPTIONS\033[0m
          --help, -h
                Show help.

          --setup 
                Run setup to save your name (in every md file generated by thm2md) 
                and the \033[93m'connect.sid'\033[0m cookie to access subscriber-only rooms. 

          \033[93m'connect.sid'\033[0m
                Only for who have TryHackMe subscription.
                It is a cookie of TryHackMe.

                Don't know how to get your cookie?
                Visit: \033[94mhttps://bit.ly/how_cookie\033[0m
          
\033[91m\033[91mAUTHOR\033[0m
        Written by \033[96mAkash Kumar (sky9262)\033[0m

\033[91mLINKS\033[0m
      Github: \033[94mhttps://github.com/sky9262/thm2md\033[0m
      LinkedIn: \033[94mhttps://www.linkedin.com/in/sky9262\033[0m

\033[91mCOPYRIGHT\033[0m
          This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law.
"""
    )

if len(sys.argv) < 2 :
    print("""thm2md.py --setup
thm2md.py [Room Name] [Path To Save]
""")
    exit() 
elif sys.argv[1] == "--help" or sys.argv[1] == "-h":
    print_help()
    exit()    
elif sys.argv[1] == "--setup":
    setup()
    exit()    
else:
    room = sys.argv[1]

url = f"https://tryhackme.com/api/tasks/{room}"

if os.path.isfile(f'{os.path.expanduser("~")}/.thm2md/config.thm'):
    with open(f'{os.path.expanduser("~")}/.thm2md/config.thm') as f:
        Name = f.readline().replace("\n", "")
        connect_sid = f.readline().replace("\n", "")
    cookies = {"connect.sid": connect_sid}
    resp = requests.get(url=url, cookies=cookies)
else:
    resp = requests.get(url=url)

if "text/html" in resp.headers.get("content-type"):
    print(
        "This room is for \033[91msubscriber-only\033[0m.\nPlease run \033[93m'thm2md.py --setup'\033[0m and enter a valid \033[93m'connect.sid'\033[0m cookie if you have subscription."
    )
    exit()

data = resp.json()

if "application/json" in resp.headers.get("content-type") and len(data["data"]) == 0:
    print("\033[91mRoom does not exist!!!\033[0m")
    exit()


ttask = data["totalTasks"]

path_exist = False
if len(sys.argv) > 2:
    if os.path.exists(sys.argv[2]):
        if sys.argv[2][-1] != "/":
            sys.argv[2] = sys.argv[2] + "/"
        path_exist = True
    else:
        print(
            f"The output path '{sys.argv[2]}' does not exist.\n\nSaved in {os.getcwd()}/{room}.md"
        )

save_path = f'{sys.argv[2] if path_exist else "./"}{room}.md'

with open(save_path, "w") as md:
    md.write(f"# {room}\n")
    md.write(f"> {Name} | " + date.today().strftime("%B %d, %Y"))
    md.write("\n-------------------------------\n\n<br/>\n<br/>\n\n")
    for i in range(ttask):
        md.write(f"# Task {i+1} : " + data["data"][i]["taskTitle"] + "\n")
        for j in range(len(data["data"][i]["questions"])):
            md.write(
                f"### {j+1}. " + cleanhtml(data["data"][i]["questions"][j]["question"])
            )
            md.write("\n```\n\n```")
            md.write("\n")
        md.write("\n")

print(f"Saved to {save_path}\n\nThanks to use thm2md")
